#! /usr/bin/env node
/**
 * @file        download        Program to download a URL and send it to stdout or the
 *                              specified field descriptor.
 *
 * @author      Wes Garland, wes@kingsds.netework
 * @date        May 2020
 */

const dcpClient = require('..');
const fs = require('fs');

function usage() {
  console.log(
`Usage: ${process.argv[1]} [--quiet] [--fd=number] protocol://restofurl.com
 Where:
    --fd=N:     send all output to file descriptor N
    --quiet:    suppress progress messages
`);
}

async function main(argv) {
  var data;
  var url;
  var fd;
  
  loop: for (let i=0; i < argv.length; i++)
  {
    let [,key,,value] = argv[i].match(/(^[^=]*)(=?)(.*)/); /* separate by first = */
    
    switch(key) {
      case '--quiet':
        argv.splice(i--,1);
        console.log = console.debug = function(){};
        break;
      case '--fd':
        fd = Number(value);
        break;
      default:
        continue loop;
    }

    argv.splice(i--,1);
  }
  url = argv[argv.length - 1];

  if (argv.length < 2)
    return usage();

  try {
    data = await require('dcp/utils').justFetch(url);
    if (fd)
      fs.writeSync(fd, data);
    else 
      process.stdout.write(data);
  } catch(e) {
    console.error(require('dcp/utils').justFetchPrettyError(e));
    process.exit(1);
  }
}

main.call(null, process.argv.slice(1)).finally(() => setImmediate(process.exit));
