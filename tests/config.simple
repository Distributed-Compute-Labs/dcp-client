#! /usr/bin/env node

/**
 * @file        config.simple
 *              In conjunction with test-etc/override/dcp-config.js, ensure correct
 *              precendence of dcpConfig sources. Based heavily on config.tap.
 *
 * @author      KC Erb, Wes Garland
 * @date        Jul 2020, Sep 2022
 */
'use strict';
require('./setup-testenv');
const dcpClient = require('..');

async function main()
{
  const dcpConfig = require('dcp/dcp-config');

  if (dcpConfig.etcOnly !== 'in-etc')
    throw new Error('tests-etc/dcp/dcp-config.js did not load');

  
        addConfigFile(localConfig, etc,    'dcp/dcp-config');
        addConfigFile(localConfig, options.configName && path.resolve(progDir, options.configName));
        addConfigFile(localConfig, home,  '.dcp/dcp-config');
        addConfigFile(localConfig, home,  `.dcp/${programName}/dcp-config`);
        addConfigFile(localConfig, home,  '.dcp/scope', configScope);
        addConfig    (localConfig, initConfig); 
        addConfigFile(localConfig, etc,    `dcp/${programName}/dcp-config`);
        addConfigFile(localConfig, etc,    'dcp/override-dcp-config');
        addConfigFile(localConfig, etc,    'dcp/scope', configScope);

  console.log(dcpConfig.etcOnly);
  
`  
  test('config order', function (t) {
  t.equal(dcpConfig.etcOnly, "in-etc");
  t.equal(dcpConfig.etcProgramName, "in-etc-config-tap");
  t.equal(dcpConfig.homeDir, "in-homedir");
  t.equal(dcpConfig.homeDirProgramName, "in-homedir-config-tap");
  t.equal(dcpConfig.etcOverriden, "in-override");
  t.equal(dcpConfig.etcProgramNameOverridden, "in-override");
  t.equal(dcpConfig.homeDirOverridden, "in-override");
  t.equal(dcpConfig.homeDirProgramNameOverriden, "in-override");
});`
}

dcpClient.init({
  configName:  './etc/dcp-config',
  configScope: 'config-simple-test',
}).then(main).catch(process.exit);
